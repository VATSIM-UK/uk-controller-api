name: Build and Test

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  laravel-tests:
    name: Run
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.4', '8.0']
    services:
      mysql:
        image: mysql:8.0
        env:
          DEFAULT_AUTHENTICATION_PLUGIN: mysql_native_password
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 32574:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10
      redis:
        image: redis:alpine
        ports:
          - "32575:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure MySQL
        run: |
          mysql -e "CREATE DATABASE IF NOT EXISTS uk_plugin;" -h127.0.0.1 -P32574 -uroot -proot
          mysql -e "CREATE USER 'ciuser'@'%' IDENTIFIED WITH mysql_native_password BY 'ciuser';" -h127.0.0.1 -P32574 -uroot -proot
          mysql -e "GRANT ALL ON *.* TO 'ciuser'@'%';" -h127.0.0.1 -P32574 -uroot -proot
          mysql -e "SET GLOBAL sql_require_primary_key = ON;" -h127.0.0.1 -P32574 -uroot -proot

      - name: Configure PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Create Environment File
        run: cp .env.ci .env

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Restore Vendor From Cache
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction --optimize-autoloader --no-suggest

      - name: Generate App Key
        run: php artisan key:generate

      - name: Optimize
        run: php artisan optimize

      - name: Migrate Database
        run: php artisan migrate

      - name: Install Passport
        run: php artisan passport:install

      - name: Seed Database
        run: php artisan db:seed

      - name: Serve Application
        run: php artisan serve -q &

      - name: Run PHPUnit With Coverage
        if: matrix.php == '7.4'
        run: vendor/bin/phpunit --coverage-clover=coverage.xml
        env:
          XDEBUG_MODE: coverage

      - name: Run PHPUnit Without Coverage
        if: matrix.php != '7.4'
        run: vendor/bin/phpunit

      - name: Upload Code Coverage Report
        if: matrix.php == '7.4'
        run: bash <(curl -s https://codecov.io/bash)
